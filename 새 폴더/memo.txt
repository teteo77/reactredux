리액트에서는 pop은 원본 배열을 수정하기 때문에 쓰면 안된다
    ㄴ 원본배열을 유지 하면서 데이터를 사요ㅕㅇ해야한다.

input, li같은 레벨은 안되고 부모요소 하나로
    ㄴ <> </>로 감싸주면 프레그 먼트로 통인된다.

프론트 엔드는 사용자 입장 에서 생각 
todolist삭제기능에서 더블클릿, 1~10번 누르면 삭제 된다는지,
    ㄴ ex)체크리스트를 이용해서 삭제 한다던가
삭제 기능을 만드는 방법은 많다.
    ㄴ 사용자가 삭제하는 기능을. 한다고했을떄 젤 편한 방법.    
ㄴ 각각에 할일마다 옆에 삭제 버튼이 있고 클릭하면 삭제

위 설명들은 요구 사항들중 하나.




react를 실행시키면 값이 입력되어있는 상태가 아니다.
제가 입력을 하면은 tasks에 값이 담기면서 index+1
값이 추가되면서 생긴 idnex값을 불러와서
삭제버튼을 눌렀을때 삭제 버튼과 동일한 index값을 삭제한다.
    ㄴ 입니다. 제가 기능하고 싶은 기능.


딜리트
delete기능을 만들기 위한 순서
    ㄴ 일단 액션을 만든다


스토어(store)는 애플리케이션의 상태(state)를 가지고 있는 곳이다. 자바스크립트 객체 형태로 저장되어 있다.
    ㄴ  Reducer를 통해서만 접근할 수 있다.
리듀서(reducer)는 스토어가 가지고 있는 상태 변화시키기 위한 함수 이다.
액션(action)은 사용자의 입력, 웹요청 완료 처럼 어떠한 상태를 변화 시킬 수 있는 현상을 의미

프론트엔드에서 상태란 무엇인가?
    ㄴ 상태는 컴포넌트 내부에서 관리되며 어플리케이션의 렌더에 영향을 미치는 플레인 자바스크립트 객체이다. 
    ㄴ "어플리케이션의 화면에 영향을 끼치는 자바스크립트 객체" 라고 보아도 무방하다.
        ㄴ 보통은 이를 통칭해 "변화하는 데이터" 라고 일컫는다. 사용자와의 인터랙션을 통해 동적으로 계속해서 변화하는 데이터이다.
        ㄴ 내가 쓱닷컴에서 어떤 물건을 장바구니에 담고, + 버튼을 눌러 수량을 변경했을 때, 1개에서 2개로 변하는 것, 인스타그램에서 내가 누군가를 팔로우했을 때, 팔로워 수가 1이 증가하는것 모두 상태가 변화하는 것이라고 부를 수 있다.
    
    ㄴ 상태들은 일관적이어야한다. 어떤 말이냐면, 서로 다른 컴포넌트에서 동일한 상태를 다룬다면, 그 출처가 같아야한다는 것이다. 
        ㄴ 내 인스타 아이디, 내가 팔로잉하는 사람들 수, 나의 팔로워 수, 내 피드에 공유된 포스트들, 스토리들, 알림 등.. 정말 많다.
        ㄴ 이런 상태들은 일관적이어야한다. 어떤 말이냐면, 서로 다른 컴포넌트에서 동일한 상태를 다룬다면, 그 출처가 같아야한다는 것이다. 
        ㄴ 예를 들어, 1.인스타 피드에 공유된 포스트들을 보여주는 컴포넌트가 있고, 그 2.포스트들의 개수를 나타내주는 컴포넌트가 있다고 하자.
        ㄴ 그런데 만약에 내가 새로운 포스트를 하나 올렸다고 하자. 그런데 피드에 보여지는 포스트는 11개인데, 그 개수를 나타내는 컴포넌트는 10개를 나타낸다면, 나는 혼란을 느낄 것이다.
            ㄴ "제대로 올라간게 맞나?!! 뭘 믿어야하지?!"
        ㄴ 그렇기 때문에 상태의 일관성, 즉 데이터의 무결성은 정말 중요하다.

